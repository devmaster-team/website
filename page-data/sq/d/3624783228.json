{"data":{"allMdx":{"nodes":[{"frontmatter":{"title":"Why we?","ending":"If you also understand how important are things we just mentioned you know that we are appropriate people to hire.","parts":[{"iconName":"fal fa-shield-check","header":"Experience","content":"We have many years of backend development and we exactly know how to design software to achieve good, scalable and testable architecture."},{"iconName":"fal fa-lock-alt","header":"Coding","content":"We know that the most important is how software is designed and how tests are written."},{"iconName":"fal fa-magnet","header":"Design patterns","content":"We use design patterns. You can be sure that your software will be build with factories, builders, commands. Classes will be hidden behind abstractions."},{"iconName":"fal fa-medal","header":"Rudiments","content":"To avoid spaghetti code we follow 'tell don't ask principle' and expose properties only in DTO objects and other data classes. We understand that 'what you hide you can change', we are aware of 'not creating objects in place where we use them' and many more. We are refactoring experts."}]}},{"frontmatter":{"title":"Warum wir?","ending":"Wenn Sie auch verstehen, wie wichtig die Dinge sind, die wir gerade erwähnt haben, wissen Sie, dass wir die geeigneten Leute sind, um sie einzustellen.","parts":[{"iconName":"fal fa-shield-check","header":"Erfahrung","content":"Wir haben viele Jahre Erfahrung in der Backend-Entwicklung und wissen genau, wie man Software entwirft, um eine gute, skalierbare und testbare Architektur zu erreichen."},{"iconName":"fal fa-lock-alt","header":"Coding","content":"Wir wissen, dass es am wichtigsten ist, wie Software entworfen und Tests geschrieben werden."},{"iconName":"fal fa-magnet","header":"Entwurfsmuster","content":"Wir verwenden Entwurfsmuster. Sie können sicher sein, dass Ihre Software mit Factories, Builders und Befehlen erstellt wird. Die Klassen werden hinter Abstraktionen versteckt."},{"iconName":"fal fa-medal","header":"Grundzüge","content":"Um Spaghetti-Code zu vermeiden, folgen wir dem 'tell don't ask'-Prinzip und legen Eigenschaften nur in DTO-Objekten und anderen Datenklassen offen. Wir wissen, dass 'was man versteckt, kann man ändern', wir sind uns bewusst, dass wir 'keine Objekte dort erstellen, wo wir sie brauchen' und vieles mehr. Wir sind Refactoring-Experten."}]}}]}}}